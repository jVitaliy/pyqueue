# Generated from interpreter/Desc.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,39,324,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,
        4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,
        1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,16,
        1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,
        1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,
        1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,
        1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,
        1,25,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
        1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,
        1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
        1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,
        1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,
        1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,
        1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
        1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,36,1,36,1,37,4,37,308,
        8,37,11,37,12,37,309,1,37,1,37,1,38,1,38,1,38,1,38,5,38,318,8,38,
        10,38,12,38,321,9,38,1,38,1,38,0,0,39,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,1,0,
        4,1,0,48,57,2,0,65,90,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,
        325,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
        0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,
        0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
        0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,
        0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,1,79,1,0,0,0,
        3,81,1,0,0,0,5,83,1,0,0,0,7,85,1,0,0,0,9,91,1,0,0,0,11,96,1,0,0,
        0,13,105,1,0,0,0,15,107,1,0,0,0,17,116,1,0,0,0,19,122,1,0,0,0,21,
        124,1,0,0,0,23,126,1,0,0,0,25,128,1,0,0,0,27,130,1,0,0,0,29,132,
        1,0,0,0,31,134,1,0,0,0,33,136,1,0,0,0,35,142,1,0,0,0,37,144,1,0,
        0,0,39,151,1,0,0,0,41,157,1,0,0,0,43,164,1,0,0,0,45,169,1,0,0,0,
        47,178,1,0,0,0,49,182,1,0,0,0,51,191,1,0,0,0,53,193,1,0,0,0,55,195,
        1,0,0,0,57,208,1,0,0,0,59,227,1,0,0,0,61,245,1,0,0,0,63,252,1,0,
        0,0,65,261,1,0,0,0,67,270,1,0,0,0,69,289,1,0,0,0,71,302,1,0,0,0,
        73,304,1,0,0,0,75,307,1,0,0,0,77,313,1,0,0,0,79,80,5,40,0,0,80,2,
        1,0,0,0,81,82,5,41,0,0,82,4,1,0,0,0,83,84,5,61,0,0,84,6,1,0,0,0,
        85,86,5,116,0,0,86,87,5,121,0,0,87,88,5,112,0,0,88,89,5,101,0,0,
        89,90,5,61,0,0,90,8,1,0,0,0,91,92,5,100,0,0,92,93,5,105,0,0,93,94,
        5,114,0,0,94,95,5,61,0,0,95,10,1,0,0,0,96,97,5,101,0,0,97,98,5,120,
        0,0,98,99,5,99,0,0,99,100,5,108,0,0,100,101,5,117,0,0,101,102,5,
        100,0,0,102,103,5,101,0,0,103,104,5,61,0,0,104,12,1,0,0,0,105,106,
        5,124,0,0,106,14,1,0,0,0,107,108,5,112,0,0,108,109,5,97,0,0,109,
        110,5,116,0,0,110,111,5,116,0,0,111,112,5,101,0,0,112,113,5,114,
        0,0,113,114,5,110,0,0,114,115,5,61,0,0,115,16,1,0,0,0,116,117,5,
        102,0,0,117,118,5,114,0,0,118,119,5,111,0,0,119,120,5,109,0,0,120,
        121,5,61,0,0,121,18,1,0,0,0,122,123,5,42,0,0,123,20,1,0,0,0,124,
        125,5,94,0,0,125,22,1,0,0,0,126,127,5,92,0,0,127,24,1,0,0,0,128,
        129,5,36,0,0,129,26,1,0,0,0,130,131,5,45,0,0,131,28,1,0,0,0,132,
        133,5,95,0,0,133,30,1,0,0,0,134,135,5,47,0,0,135,32,1,0,0,0,136,
        137,5,109,0,0,137,138,5,101,0,0,138,139,5,114,0,0,139,140,5,103,
        0,0,140,141,5,101,0,0,141,34,1,0,0,0,142,143,5,46,0,0,143,36,1,0,
        0,0,144,145,5,103,0,0,145,146,5,114,0,0,146,147,5,97,0,0,147,148,
        5,100,0,0,148,149,5,108,0,0,149,150,5,101,0,0,150,38,1,0,0,0,151,
        152,5,109,0,0,152,153,5,97,0,0,153,154,5,118,0,0,154,155,5,101,0,
        0,155,156,5,110,0,0,156,40,1,0,0,0,157,158,5,106,0,0,158,159,5,97,
        0,0,159,160,5,118,0,0,160,161,5,97,0,0,161,162,5,49,0,0,162,163,
        5,55,0,0,163,42,1,0,0,0,164,165,5,110,0,0,165,166,5,101,0,0,166,
        167,5,120,0,0,167,168,5,116,0,0,168,44,1,0,0,0,169,170,5,112,0,0,
        170,171,5,121,0,0,171,172,5,116,0,0,172,173,5,104,0,0,173,174,5,
        111,0,0,174,175,5,110,0,0,175,176,5,51,0,0,176,177,5,57,0,0,177,
        46,1,0,0,0,178,179,5,110,0,0,179,180,5,112,0,0,180,181,5,109,0,0,
        181,48,1,0,0,0,182,183,5,108,0,0,183,184,5,97,0,0,184,185,5,110,
        0,0,185,186,5,103,0,0,186,187,5,117,0,0,187,188,5,97,0,0,188,189,
        5,103,0,0,189,190,5,101,0,0,190,50,1,0,0,0,191,192,5,44,0,0,192,
        52,1,0,0,0,193,194,5,59,0,0,194,54,1,0,0,0,195,196,5,98,0,0,196,
        197,5,117,0,0,197,198,5,105,0,0,198,199,5,108,0,0,199,200,5,100,
        0,0,200,201,5,80,0,0,201,202,5,114,0,0,202,203,5,111,0,0,203,204,
        5,106,0,0,204,205,5,101,0,0,205,206,5,99,0,0,206,207,5,116,0,0,207,
        56,1,0,0,0,208,209,5,115,0,0,209,210,5,116,0,0,210,211,5,97,0,0,
        211,212,5,114,0,0,212,213,5,116,0,0,213,214,5,83,0,0,214,215,5,121,
        0,0,215,216,5,115,0,0,216,217,5,116,0,0,217,218,5,101,0,0,218,219,
        5,109,0,0,219,220,5,83,0,0,220,221,5,101,0,0,221,222,5,114,0,0,222,
        223,5,118,0,0,223,224,5,105,0,0,224,225,5,99,0,0,225,226,5,101,0,
        0,226,58,1,0,0,0,227,228,5,115,0,0,228,229,5,116,0,0,229,230,5,111,
        0,0,230,231,5,112,0,0,231,232,5,83,0,0,232,233,5,121,0,0,233,234,
        5,115,0,0,234,235,5,116,0,0,235,236,5,101,0,0,236,237,5,109,0,0,
        237,238,5,83,0,0,238,239,5,101,0,0,239,240,5,114,0,0,240,241,5,118,
        0,0,241,242,5,105,0,0,242,243,5,99,0,0,243,244,5,101,0,0,244,60,
        1,0,0,0,245,246,5,98,0,0,246,247,5,114,0,0,247,248,5,97,0,0,248,
        249,5,110,0,0,249,250,5,99,0,0,250,251,5,104,0,0,251,62,1,0,0,0,
        252,253,5,100,0,0,253,254,5,101,0,0,254,255,5,112,0,0,255,256,5,
        108,0,0,256,257,5,111,0,0,257,258,5,121,0,0,258,259,5,84,0,0,259,
        260,5,111,0,0,260,64,1,0,0,0,261,262,5,114,0,0,262,263,5,101,0,0,
        263,264,5,112,0,0,264,265,5,111,0,0,265,266,5,72,0,0,266,267,5,111,
        0,0,267,268,5,115,0,0,268,269,5,116,0,0,269,66,1,0,0,0,270,271,5,
        111,0,0,271,272,5,112,0,0,272,273,5,101,0,0,273,274,5,110,0,0,274,
        275,5,71,0,0,275,276,5,105,0,0,276,277,5,116,0,0,277,278,5,82,0,
        0,278,279,5,101,0,0,279,280,5,112,0,0,280,281,5,111,0,0,281,282,
        5,76,0,0,282,283,5,111,0,0,283,284,5,99,0,0,284,285,5,97,0,0,285,
        286,5,108,0,0,286,287,5,108,0,0,287,288,5,121,0,0,288,68,1,0,0,0,
        289,290,5,99,0,0,290,291,5,108,0,0,291,292,5,111,0,0,292,293,5,115,
        0,0,293,294,5,101,0,0,294,295,5,71,0,0,295,296,5,105,0,0,296,297,
        5,116,0,0,297,298,5,82,0,0,298,299,5,101,0,0,299,300,5,112,0,0,300,
        301,5,111,0,0,301,70,1,0,0,0,302,303,7,0,0,0,303,72,1,0,0,0,304,
        305,7,1,0,0,305,74,1,0,0,0,306,308,7,2,0,0,307,306,1,0,0,0,308,309,
        1,0,0,0,309,307,1,0,0,0,309,310,1,0,0,0,310,311,1,0,0,0,311,312,
        6,37,0,0,312,76,1,0,0,0,313,314,5,47,0,0,314,315,5,47,0,0,315,319,
        1,0,0,0,316,318,8,3,0,0,317,316,1,0,0,0,318,321,1,0,0,0,319,317,
        1,0,0,0,319,320,1,0,0,0,320,322,1,0,0,0,321,319,1,0,0,0,322,323,
        6,38,0,0,323,78,1,0,0,0,3,0,309,319,1,6,0,0
    ]

class DescLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    MERGE = 17
    DOT = 18
    GRADLE = 19
    MAVEN = 20
    JAVA17 = 21
    NEXT = 22
    PYTHON39 = 23
    NPM = 24
    LANGUAGE = 25
    COMMA = 26
    SEMICOLON = 27
    BUILD_PROJECT = 28
    START_SYSTEM_SERVICE = 29
    STOP_SYSTEM_SERVICE = 30
    BRANCH = 31
    DEPLOY_TO = 32
    REPO_HOST = 33
    OPEN_GIT_REPO_LOCALLY = 34
    CLOSE_GIT_REPO = 35
    NUM = 36
    CHARS = 37
    WS = 38
    LINE_COMMENT = 39

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'='", "'type='", "'dir='", "'exclude='", "'|'", 
            "'pattern='", "'from='", "'*'", "'^'", "'\\'", "'$'", "'-'", 
            "'_'", "'/'", "'merge'", "'.'", "'gradle'", "'maven'", "'java17'", 
            "'next'", "'python39'", "'npm'", "'language'", "','", "';'", 
            "'buildProject'", "'startSystemService'", "'stopSystemService'", 
            "'branch'", "'deployTo'", "'repoHost'", "'openGitRepoLocally'", 
            "'closeGitRepo'" ]

    symbolicNames = [ "<INVALID>",
            "MERGE", "DOT", "GRADLE", "MAVEN", "JAVA17", "NEXT", "PYTHON39", 
            "NPM", "LANGUAGE", "COMMA", "SEMICOLON", "BUILD_PROJECT", "START_SYSTEM_SERVICE", 
            "STOP_SYSTEM_SERVICE", "BRANCH", "DEPLOY_TO", "REPO_HOST", "OPEN_GIT_REPO_LOCALLY", 
            "CLOSE_GIT_REPO", "NUM", "CHARS", "WS", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "MERGE", "DOT", "GRADLE", "MAVEN", "JAVA17", 
                  "NEXT", "PYTHON39", "NPM", "LANGUAGE", "COMMA", "SEMICOLON", 
                  "BUILD_PROJECT", "START_SYSTEM_SERVICE", "STOP_SYSTEM_SERVICE", 
                  "BRANCH", "DEPLOY_TO", "REPO_HOST", "OPEN_GIT_REPO_LOCALLY", 
                  "CLOSE_GIT_REPO", "NUM", "CHARS", "WS", "LINE_COMMENT" ]

    grammarFileName = "Desc.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


